services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: afayaconekt-postgres
    restart: always
    environment:
      POSTGRES_DB: afayaconekt
      POSTGRES_USER: afayaconekt
      POSTGRES_PASSWORD: AfayaDB2025SecurePass!
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - afayaconekt-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: afayaconekt-minio
    restart: always
    environment:
      MINIO_ROOT_USER: afayaminio2025
      MINIO_ROOT_PASSWORD: AfayaMinIO2025SecureKey!@#
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - afayaconekt-network

  # Backend API
  backend:
    image: nickenf/afayac-backend:latest
    container_name: afayaconekt-backend
    restart: always
    environment:
      DATABASE_URL: postgresql://afayaconekt:afayaconekt_password@postgres:5432/afayaconekt
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin_password
      JWT_SECRET: your_jwt_secret_here_change_in_production
      FRONTEND_URL: http://localhost:3000
      API_URL: http://localhost:3001
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - minio
    networks:
      - afayaconekt-network

  # Frontend
  frontend:
    image: nickenf/afayac-frontend:latest
    container_name: afayaconekt-frontend
    restart: always
    environment:
      VITE_API_URL: http://localhost:3001
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - afayaconekt-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: afayaconekt-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - frontend
      - backend
    networks:
      - afayaconekt-network

volumes:
  postgres_data:
  minio_data:

networks:
  afayaconekt-network:
    driver: bridge